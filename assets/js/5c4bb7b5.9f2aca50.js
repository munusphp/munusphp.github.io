(self.webpackChunkmunus_webiste=self.webpackChunkmunus_webiste||[]).push([[170],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7294),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=o().createContext({}),s=function(e){var n=o().useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return o().createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o().createElement(o().Fragment,{},n)}},m=o().forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),m=r,f=p["".concat(i,".").concat(m)]||p[m]||d[m]||a;return t?o().createElement(f,l(l({ref:n},u),{},{components:t})):o().createElement(f,l({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=t[u];return o().createElement.apply(null,i)}return o().createElement.apply(null,t)}m.displayName="MDXCreateElement"},1042:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=t(2122),o=t(9756),a=(t(7294),t(3905)),i=["components"],l={id:"tryto",title:"TryTo",sidebar_label:"TryTo"},c={unversionedId:"tryto",id:"tryto",isDocsHomePage:!1,title:"TryTo",description:"The TryTo control gives us the ability to write safe code without focusing on try-catch blocks in the presence of exceptions.",source:"@site/docs/tryto.md",sourceDirName:".",slug:"/tryto",permalink:"/docs/tryto",version:"current",sidebar_label:"TryTo",frontMatter:{id:"tryto",title:"TryTo",sidebar_label:"TryTo"},sidebar:"docs",previous:{title:"Option",permalink:"/docs/option"},next:{title:"Either",permalink:"/docs/either"}},u=[{value:"Construction",id:"construction",children:[]},{value:"Failure",id:"failure",children:[]},{value:"Recovery",id:"recovery",children:[]},{value:"Methods",id:"methods",children:[]},{value:"Examples",id:"examples",children:[]}],s={toc:u};function p(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"TryTo")," control gives us the ability to write safe code without focusing on try-catch blocks in the presence of exceptions.\n",(0,a.kt)("inlineCode",{parentName:"p"},"TryTo")," wraps given ",(0,a.kt)("inlineCode",{parentName:"p"},"callable")," and catch any ",(0,a.kt)("inlineCode",{parentName:"p"},"Throwable")," that will occur while executing it."),(0,a.kt)("p",null,"Remember that ",(0,a.kt)("inlineCode",{parentName:"p"},"TryTo")," will may re-throw exception when calling ",(0,a.kt)("inlineCode",{parentName:"p"},"get()")," method. You can prevent from this using ",(0,a.kt)("inlineCode",{parentName:"p"},"isSuccess()")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"isFailure()")," methods. "),(0,a.kt)("h2",{id:"construction"},"Construction"),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"run")," static method:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"/** @var TryTo<Result> $result */\n$result = TryTo::run(function(){throw new \\DomainException('use ddd');});\n\n$result->getOrElse(new Result());\n")),(0,a.kt)("h2",{id:"failure"},"Failure"),(0,a.kt)("p",null,"In case of an exception, ",(0,a.kt)("inlineCode",{parentName:"p"},"TryTo")," returns an instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"Failure"),".\nYou can use ",(0,a.kt)("inlineCode",{parentName:"p"},"getCause(): Throwable")," method to gets the underlying exception."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"$result = TryTo::run(function(){throw new \\DomainException('use ddd');});\n\n$result->getCause(); // returns instance of DomainException\n")),(0,a.kt)("h2",{id:"recovery"},"Recovery"),(0,a.kt)("p",null,"Common use case is recovery from failure. ",(0,a.kt)("inlineCode",{parentName:"p"},"TryTo")," gives you interesting option for that ",(0,a.kt)("inlineCode",{parentName:"p"},"recover(string $throwable, callable $recovery): self")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"$value = TryTo::run(function () {throw new \\DomainException('use ddd'); })\n        ->recover(\\RuntimeException::class, function () {return 'runtime handled'; })\n        ->recover(\\DomainException::class, function () {return 'domain handled'; })\n        ->get();\n// $value === 'domain handled'\n")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"andThen(callable $callable): self")," - allow to chain next operation"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"andFinally(callable $callable): self")," - run given $callable whatever the result is"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"onSuccess(callable $consumer): self")," - run given $consumer with success value as an argument"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"onFailure(callable $consumer): self")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"onSpecificFailure(string $throwable, callable $consumer): self"))),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Try to run operation, log error, and get default value - all in one simple object-oriented approach:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"$result = TryTo::run(function () {\n    return 'success';\n})->onFailure(function (\\Throwable $throwable) {\n    log($throwable);\n})->getOrElse('default');\n")))}p.isMDXComponent=!0}}]);