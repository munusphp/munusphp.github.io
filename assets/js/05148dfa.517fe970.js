(self.webpackChunkmunus_webiste=self.webpackChunkmunus_webiste||[]).push([[955],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return d}});var r=n(7294),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a().createContext({}),u=function(e){var t=a().useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=u(e.components);return a().createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a().createElement(a().Fragment,{},t)}},f=a().forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(n),f=r,d=m["".concat(o,".").concat(f)]||m[f]||p[f]||i;return n?a().createElement(d,l(l({ref:t},c),{},{components:n})):a().createElement(d,l({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a().createElement.apply(null,o)}return a().createElement.apply(null,n)}f.displayName="MDXCreateElement"},7548:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return m}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o=["components"],l={id:"stream",title:"Stream",sidebar_label:"Stream"},s={unversionedId:"stream",id:"stream",isDocsHomePage:!1,title:"Stream",description:"Stream is lazy sequence of elements which may be infinitely long.",source:"@site/docs/stream.md",sourceDirName:".",slug:"/stream",permalink:"/docs/stream",version:"current",sidebar_label:"Stream",frontMatter:{id:"stream",title:"Stream",sidebar_label:"Stream"},sidebar:"docs",previous:{title:"Set",permalink:"/docs/set"},next:{title:"GenericList",permalink:"/docs/list"}},c=[{value:"Construction",id:"construction",children:[]},{value:"Collectors",id:"collectors",children:[]},{value:"Examples",id:"examples",children:[]}],u={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Stream")," is lazy sequence of elements which may be infinitely long."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Stream")," is composed of a head and a tail. Head contains first value, tail is lazy evaluated - subsequent values are calculated as needed.\nThe stream has two implementations available:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"EmptyStream")," which stand for empty stream (",(0,i.kt)("inlineCode",{parentName:"li"},"Empty")," is reserved keyword in PHP)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Cons")," which stand for a stream with one or more elements (consisting of a head and tail)")),(0,i.kt)("h2",{id:"construction"},"Construction"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"Stream::empty();\nStream::of(1, 2, 3);\nStream::ofAll(['a', 'b', 'c']);\nStream::range(1, 10); // stream with 10 subsequent numbers from 1\n")),(0,i.kt)("p",null,"Because a stream can be infinite there are several other interesting ways to create it:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"Stream::from(1); // infinite stream which emits subsequent numbers from 1\nStream::continually(function () {return mt_rand(1, 10); }); // creates stream which emits random numbers from 1 to 10\n\nStream::iterate(1, function (int $i) {return $i * 2; }); // creates stream, use 1 as start value\n// and call given supplier with prev value each time to calculate next value\n")),(0,i.kt)("h2",{id:"collectors"},"Collectors"),(0,i.kt)("p",null,"Common use case for stream is to iterate over some kind of source (potentially infinite) filter it and collect values to list:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"Stream::continually($dataProvider)\n    ->filter(function($value) {return $value%2===0;})\n    ->take(5)\n    ->collect(Collectors::toList());\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Find the sum of the first ten squares of even numbers (from php 7.4):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"Stream::from(1)\n    ->filter(fn($n) => $n%2===0)\n    ->map(fn($n) => $n**2)\n    ->take(10)\n    ->sum();\n")))}m.isMDXComponent=!0}}]);